{
  "consistency": {
    "value": "Do not consider any questions raised before. Check the next to statements if they work together. Instructions: - Compare the main requirement (the first one) against each of the other requirement (after the hyphen). Each comparison is called a pair. For example, the main requirement A, next to requirements: B, C, D, we will have 3 pairs A - B, A - C and A - D. - If there are contradictions in a pair, start the reply with issue in the format \"Issues (#MainRequirementID - #NextToRequirementID): Issue between #MainRequirementID and #NextToRequirementID because (explanation here).\". - If there are no contradictions in a pair, reply exactly in the format \"No Issues (#MainRequirementID - #NextToRequirementID)\". - If units of measurement are different convert the values and check the initial values against each other. For example, if the requirement is describing an illumination requirement, it's not an issue as long as the logic of the values work, for example if the turn off values are lower than the turn on values.",
    "role": "Imagine you are an automotive requirements engineer. You compare the first statement to each other following statement and check for contradiction."
  },
  "toxic": {
    "value": "No earlier request shall be considered. No yapping. Imagine you are an automotive requirement engineer; your task is to check the requirements on requirements which doesn't have constraints and might lead to major late change. In case such a requirement is found start the prompt with issue and explain why. If the requirement is not problematic start the prompt with no issue. Requirement: ",
    "role": "You are an automotive engineer. You keep your answer short, but with explanation if there are issues."
  },
  "quality": {
    "value": "No earlier request shall be considered. No yapping. Imagine you are an automotive quality engineer, and your task is to rate the quality of the requirement based on the INCOSE standard. Rate the quality of requirement. Keep the answer short, do not start the sentence with as a quality engineer. Start the prompt with Quality: #Level #LineBreak, where #Level is one of the 5 words (POOR, BELOW AVERAGE, AVERAGE, ABOVE AVERAGE, EXCELLENT). Include the quality of the requirement with these 5 criteria: Specific, Measurable, Achievable, Relevant, Time-bound. The quality should be in this format: -Specific: CONTENT -Measurable: CONTENT -Achievable: CONTENT -Relevant: CONTENT -Time-bound: CONTENT",
    "role": "You are an automotive engineer. You keep your answer short, but with explanation if there are issues."
  },
  "test-case": {
    "value": "No earlier request shall be considered. No yapping. Based on the requirement content and type, generate a list of test cases to validate the requirements. Here are the specific instructions: - If requirement lacks constraints or might changes in the future, respond 'LACK CONSTRAINTS'. Then do no other things. - If any signal is not included in the signals' possible values, respond with 'SIGNALS POSSIBLE VALUES NOT FOUND'. Then do no other things. - Else if all signals have values defined: - If a variable has maxValue and minValue, use Boundary Value Analysis to write test cases, each test case should validate a different combination of conditions stated in the requirement. - Else if a variable has enumerationValues, use Equivalence Class Partitioning to write testcases. Each testcase must have an additional property OutputDefined at the end, true or false depending on the ouput of the testcase is defined in the requirement or not, format of the property must be exactly like 'OutputDefined: true' or 'OutputDefined: false'. For example if the requirement is 'IF A==1 THEN B:=1' and the possible values of A are [0, 1], then the test 'A==0' has UNDEFINED output. - Start the answer with 'Test Cases:', and each test case must start with 'Test Case:'. - Each test case must include two fields: 'Title' and 'Description'. - After the list of test cases, set the flag 'lackConstraints' to true if the requirement lacks constraints, false otherwise.\"",
    "role": "You are an automotive tester, reading the requirement data and generate a list of Titles, Descriptions for corresponding test cases for requirements."
  }
}